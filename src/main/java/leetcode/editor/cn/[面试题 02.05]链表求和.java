//ÁªôÂÆö‰∏§‰∏™Áî®ÈìæË°®Ë°®Á§∫ÁöÑÊï¥Êï∞ÔºåÊØè‰∏™ËäÇÁÇπÂåÖÂê´‰∏Ä‰∏™Êï∞‰Ωç„ÄÇ
//
// Ëøô‰∫õÊï∞‰ΩçÊòØÂèçÂêëÂ≠òÊîæÁöÑÔºå‰πüÂ∞±ÊòØ‰∏™‰ΩçÊéíÂú®ÈìæË°®È¶ñÈÉ®„ÄÇ 
//
// ÁºñÂÜôÂáΩÊï∞ÂØπËøô‰∏§‰∏™Êï¥Êï∞Ê±ÇÂíåÔºåÂπ∂Áî®ÈìæË°®ÂΩ¢ÂºèËøîÂõûÁªìÊûú„ÄÇ 
//
// 
//
// Á§∫‰æãÔºö 
//
// ËæìÂÖ•Ôºö(7 -> 1 -> 6) + (5 -> 9 -> 2)ÔºåÂç≥617 + 295
//ËæìÂá∫Ôºö2 -> 1 -> 9ÔºåÂç≥912
// 
//
// ËøõÈò∂ÔºöÊÄùËÄÉ‰∏Ä‰∏ãÔºåÂÅáËÆæËøô‰∫õÊï∞‰ΩçÊòØÊ≠£ÂêëÂ≠òÊîæÁöÑÔºåÂèàËØ•Â¶Ç‰ΩïËß£ÂÜ≥Âë¢? 
//
// Á§∫‰æãÔºö 
//
// ËæìÂÖ•Ôºö(6 -> 1 -> 7) + (2 -> 9 -> 5)ÔºåÂç≥617 + 295
//ËæìÂá∫Ôºö9 -> 1 -> 2ÔºåÂç≥912
// 
// Related Topics ÈÄíÂΩí ÈìæË°® Êï∞Â≠¶ 
// üëç 131 üëé 0

package leetcode.editor.cn;

import domain.ListNode;

class SumListsLcci {
    public static void main(String[] args) {
        Solution solution = new SumListsLcci().new Solution();
    }

//leetcode submit region begin(Prohibit modification and deletion)

    /**
     * Definition for singly-linked list.
     * public class ListNode {
     * int val;
     * ListNode next;
     * ListNode(int x) { val = x; }
     * }
     */
    class Solution {
        public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
            ListNode root = new ListNode(0), currentNode = root;
            int head = 0;
            while (l1 != null || l2 != null || head != 0) {
                int one = l1 == null ? 0 : l1.val;
                int two = l2 == null ? 0 : l2.val;
                int sum = one + two + head;
                head = sum / 10;
                sum %= 10;
                ListNode listNode = new ListNode(sum);
                currentNode.next = listNode;
                currentNode = listNode;
                l1 = l1 == null ? null : l1.next;
                l2 = l2 == null ? null : l2.next;

            }
            return root.next;
        }
    }
//leetcode submit region end(Prohibit modification and deletion)

}

